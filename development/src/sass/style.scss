@import 'framework/variables';
@import 'framework/mixins';
@import 'vendor/normalize';


html {
  font-size: 14px;
  line-height: $gutter-unit; 
	color: $black;
}

/*@media screen and (min-width: 320px) {
  html { 
    font-size: calc(14px + 8 * ((100vw - 320px) / (1920 - 320)));
  }
}*/

@media screen and (min-width: $tablet) {
  html {
    font-size: 16px; 
  }
}
@media screen and (min-width: $large) {
  html {
    font-size: 18px; 
  }
}
@media screen and (min-width: $xx-large) {
  html {
    font-size: 24px;
  }
}
body {
  font-family: azo-sans-web, sans-serif;
}
h1, h2, h3, h4, h5 {
  line-height: 1.3;
	margin-top: $gutter;
  margin-bottom: 0;
}
h1 { font-size: 1.75rem; font-weight: 300; }
h2 { font-size: 1.5rem; }
h3 { font-size: 1.25rem; }
h4 { font-size: 1rem; }
h5 { font-size: 1rem; }
p {
	margin-top: $gutter;
	margin-bottom: $gutter/8;
}
ul {
	li {
		margin-bottom: $gutter/4;
	}
}
strong {
	font-weight: 500;
}
@media screen and (min-width: 1180px) {
  	h1 { font-size: 2.0rem }
  	h2 { font-size: 1.5rem }
  	h3 { font-size: 1.25rem }
  	h4 { font-size: 1.125rem }
  	h5 { font-size: 1rem }
}
@media screen and (min-width: $large) {
  	h2 { font-size: 1.75rem } 
  	h3 { font-size: 1.25rem }
  	h4 { font-size: 1rem }
  	h5 { font-size: 1rem }
}
a {
  color: inherit;
}
.svg-icon {
	fill: $black;
}
/* Utils */
.is-label {
  @include makeLabel();
}
.is-inset {
	@include makeInset();
}
.ca-button {
	@include makeFlexbox($direction: row, $align: stretch);
	.icon-wrap, a {
		display: inline-flex;
		align-items: center;
	}
	.icon-wrap {
		background-color: $shade-mid;
		padding: $gutter/4 $gutter/4;
		margin-left: 	$gutter/8;
		margin-right: $gutter/8;
	}
	.svg-icon {
		fill: 			$white;
		max-width: 	1.5rem;
		max-height: 1.5rem;
	}
	a {
		font-size: 0.8rem;
		font-weight: 300;
		color: $black;
		padding-left: 	$gutter/2;
		padding-right: 	$gutter/2;
		background-color: $shade-lightest;
		transition: background-color $buttonTransition $easing;
		&:hover, &:focus, &:active {
			background-color: $shade-mid;
			color: $white;
		}
	}
}
.bc-roll-up-link {
	position: relative;
	overflow: hidden;
	
	&-default, &-active { 
		text-align: center;
		position: absolute;
		@include makeFlexbox(row, center, center);
		width: 100%;
	}
	&-default {
		top: 0;
	}
	&-active {
		top: 100%;
	}	
	&-default, &-active {
		transition: top $buttonTransition $easing ;
	}
	&:hover, &:active, &:focus {
		.bc-roll-up-link-default {
			top: -100%;
		}
		.bc-roll-up-link-active {
			top: 0
		}	
	}
}
.ca-arrow-link {
	font-weight: bold;
	@include makeFlexbox($direction: row, $justify: flex-start, $align: center);
	a {  }
	.svg-icon {
		max-width: 	1.5rem;
		max-height: 1.5rem;
		margin-right: $gutter/4 ;
		margin-left: 	$gutter/4 ;
	}
}
.content-separator {
	flex: 					1 1 auto;
	border-left: 		2px dotted rgba($black, 0.24); 
	position: relative;
	&:before {
		content: "";
		position: absolute;
		width: 		$gutter*1.5;
		height: 	$gutter*1.5;
		background-color: rgba($black, 0.36);
		border: 0.143rem solid $white; /* 2px @ 14px */
		transform: translate(50%, -50%);
	}
}
.bc-color-square {
	width: 14%;
	display: inline-block;
	position: relative;
	&:after {
		content: "";
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 	1.0rem;
		height: 1.0rem;
		background-color: $brand-blue;
		@media screen and (min-width: 400px) {
			width: 	1.125rem;
			height: 1.125rem;
		}
	}
}
@import 'framework/grid'		;
@import 'framework/layout'	; 
@import 'framework/animations'; 

header {
  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.4);
	.bc-content-row {
		@include makeRow($direction: row, $justify: space-between, $align: stretch);	
		height: 8vh;
	}
	@media screen and (min-width: $tablet) and (orientation: portrait) {
		.bc-content-row {
			height: 5vh;
		}
	}
	@media screen and (min-width: 1024px) {
    flex-direction: row;
	}
}

.bc-header-menu--show-hide {
	padding-top: 		0;
	padding-bottom: 0;
	.bc-header-logo, .bc-header-menu__toggle {
		padding-top: 		$gutter/2; 
		padding-bottom: $gutter/2;  
	}
	.bc-header-logo {
		h1 {
			font-size: 1.125rem;
			a {
				color: $black;	
			}
		}
		
	}
	.bc-header-menu__toggle {
		flex: 0 1 auto;
		padding-left:  $gutter/2;
		padding-right: $gutter/2;
		@include makeFlexbox(row, center, center);
	}
	.svg-icon {
		fill: $black;
		max-width: 	1.5rem;
		max-height: 1.5rem;
	}
	&.menu-active {
		background-color: $white;
		.bc-header-logo {
			h1 {
				font-size: 1.125rem; 
				a {
					color: $black;	
				}
			}
		}
		.svg-icon {
			fill: $black;
			max-width: 	1.5rem;
			max-height: 1.5rem;
		}
		border-bottom: 1px solid $shade-lightest;
	}
	&.menu-active + .bc-header-menu--mobile {
		top: calc(8vh+5px);
		z-index: 100;
		visibility: visible;
		opacity: 1;
	}
	
	@media screen and (min-width: $tablet) {
		& + .bc-header-menu--mobile, .bc-header-menu__toggle {
			display: none;
		}
	}
	
}// .bc-header-menu--show-hide

.bc-header-logo, .bc-header-menu {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	align-items: center; 
}
.bc-header-logo {
	justify-content: flex-start;
	flex: 1 1 50%;
	padding-left: 	$gutter/2;
	padding-right: 	$gutter/2;
	> h1 {
		font-family: 'Helvetica Neue', sans-serif;
		font-size: 1rem;
		margin: 0;
		a {
			color: #303030;
			text-decoration: none;
		}
		span {
			font-weight: 400;
		}
	}
}
.bc-header-menu {
	&__links {
		display: none;
		margin: 			0;
		padding-left: 0;
		width: 100%;
		li {
			list-style: none;
		}
	}
	@media screen and (min-width: $tablet) {
		&__links {
			display: inherit;
		}
	}
}
.bc-header-menu, .bc-hero-header {
	.bc-header-menu__links {
		flex: 1 1 40%;
		@include makeFlexbox(row, flex-end, stretch);
		display: none;
	}
	.bc-header-menu__link {
		flex: 1 1 100%;
		max-width: 25%;
		@include makeFlexbox(column, center, stretch);
		margin-bottom: 0;
		a {
			@include makeFlexbox(column, center, center, $inline: true);
			flex: 1 1 100%;
			padding-top: 38%;
			font-size: 0.92rem;
			.bc-roll-up-link {
				&-default, &-active { 
					transition-duration: 220ms;
					height: 100%;
				}
			}
		}
		$opac: 0.72;
		.bc-roll-up-link {
			.bc-color-square {
				
			}
			.svg-icon {
				fill: $black;
				padding-left: $gutter/4;
				max-width: 	1.4rem;
				max-height: 1.5rem;
			}
			&.projects-link {
				.bc-roll-up-link-active {
					/*background-color: rgba($black, $opac);
					color: $brand-yellow;
					.svg-icon {
						fill: $brand-yellow;
					}*/
				}
			}
			&.practice-link {
				.bc-roll-up-link-active {
					/*background-color: rgba($brand-blue, $opac);
					color: $white;
					.svg-icon {
						fill: $white;
					}*/
				}
			}
			&.people-link {
				.bc-roll-up-link-active {
					/*background-color: rgba($brand-red, $opac); 
					color: $white;
					.svg-icon {
						fill: $white;
					}*/
				}
			}
		}
	}
	@media screen and (min-width: $tablet) {
		.bc-header-menu__links {
			display: inherit;
			max-height: 	100%;
		}
	}
	@media screen and (min-width: 1200px) {
		.bc-header-menu__link {
			a {	font-size: 1rem;}
		}
	}
	@media screen and (min-width: $laptop) {
		.bc-header-menu__links {
			flex-basis: 23.8%;
			display: inherit;
			max-height: 	100%;
		}
	}
	@media screen and (min-width: $x-large) {
		.bc-header-menu__links {
			.bc-header-menu__link {
				a {
					font-size: 1rem;
				}
			}
		}
	}
	@media screen and (min-width: $x-large) {
		.bc-header-menu__links {
			.bc-header-menu__link {
				a {
					font-size: 0.88rem;
				}
			}
		}
	}
	@media screen and (min-width: $x-large) {
		.bc-header-menu__links {
			.bc-header-menu__link {
				a {
					font-size: 1rem;
				}
			}
		}
	}
}
.bc-hero-header {
	.bc-header-menu__links {
		.bc-header-menu__link {
			a {
				padding-top: 0;
			}
		}
	}
}
.bc-header-menu--mobile {
	position: absolute;
	justify-content: flex-start;
	top: 		8%;
	width: 	100%;
	height: (100%-8%);
	
	background-color: $white;
	z-index: -10;	
	visibility: hidden;
	opacity: 0;
	//$buttonTransition
	transition: opacity $buttonTransition $easing, top $buttonTransition ease-in-out;
	.bc-header-menu__heading {
		font-weight: 300;
		margin-left: $gutter/2;
	}
	.bc-header-menu__links, .bc-header-menu__contact {
		padding: 	$gutter/2 $gutter/2 $gutter/2;
	}
	.bc-header-menu__links {
		display: 			inherit;
		margin: 			0;
		width: 				100%;
		
		border-bottom: 1px solid $shade-lightest;
		li {
			list-style: 		none;
			margin-bottom: 	0;
			a {
				display: block;
				padding-top: 		$gutter/4;
				padding-bottom: $gutter/4;
			}
		}
	}
	.bc-header-menu__contact {
		.ca-contact-detail {
			font-size: 0.8rem;
			margin-bottom: $gutter/2
		}
	}
}
.bc-header-menu {
	flex: 1 1 40%;
	padding-left: 1rem;
	padding-right: 1rem;	
	justify-content: flex-end;
	max-height: 100%;
}

@media screen and (min-width: $med) {
	.bc-header-menu {
		flex-basis: 28%
	}
}
@media screen and (min-width: $laptop) {
	.bc-header-menu {
		flex-basis: 23.8%
	}
}

@import 'components/bc-inner-nav';
@import 'components/bc-breadcrumbs';
@import 'components/bc-hero';
@import 'components/bc-media';
@import 'components/bc-cards';
@import 'framework/tables';

/* Inner page */

.bc-inner-nav {
	@include makeCols(10);
	& li &-label {
		display: inline;
		font-size: 0.8rem;
		font-weight: 300;
		text-decoration: none;
		text-align: right;
		padding-right: $gutter/2;
		
	}
	& li &-icon {
		padding-left: $gutter/2;
		.svg-close-icon {
			display: none;
		}
		&.active {
			.svg-funnel-icon {
				display: none;
			}
			.svg-close-icon {
				display: inherit;
			}
		}
	}
	& &-dropdown {
		font-size: 0.8rem;
		&.active {
			padding-top: 		$gutter/8;
			padding-bottom: $gutter/12;
			
			overflow: visible;
		}
		a {
			padding-top: 		$gutter/10;
			padding-bottom: $gutter/10;
			&.active {
				position: relative;
				&::before {
					content: "";
					position: absolute;
					left: -0.57rem;
					top: 50%;
					transform: translateY(-50%);
					border-width: 			0.285rem;
					border-color: 			transparent;
					border-style: 			solid;
					border-left-color: 	rgba($black, 0.8);
				}
			}
			&:hover, &:active, &:focus {
				background-color: $black;
				color: $brand-yellow;
			}
		}
	}
	li {
		&:hover, &:active, &:focus {
			> a:not(.bc-inner-nav-icon) {
				background-color: transparent;
			}
			> .bc-inner-nav-label {
				background-color: transparent;
			}		
		}
	}
	@media screen and (min-width: $desktop) {
		& &-label {
			font-size: 0.72rem;
		}
	}
}
.bc-breadcrumbs {
	padding-top: 0;
}
.bc-breadcrumbs-links {
	height: calc(6.4vh - $gutter/2);
	padding-top: 		$gutter/1.5;
	padding-bottom: $gutter/4;
	&.active {
		height: auto;
	}
	&.bc-inner-nav {
		> li {
			.bc-inner-nav-label, .bc-inner-nav-dropdown > li {
				text-transform: none;	
			}
			font-weight: normal;
			width: 100%;
			
		}
	}
}

@media screen and (min-width: $tablet) {
	.bc-breadcrumbs-links {
		&.bc-inner-nav {
			.bc-inner-nav-label, .bc-inner-nav-icon {
				align-self: flex-end;
			}
			.bc-inner-nav-icon {
				display: none;
			}
			li .bc-inner-nav-dropdown {
				min-width: 0;
				height: auto;
				display: inline-flex;
				flex-direction: row;
				align-items: center;
				overflow: visible;
				> li {
					padding-right: $gutter/4; 
					a {
						padding-top: 0;
						padding-bottom: 0;
					}
				}
				a {
					&.active {
						&:before {
							top: auto;
							left: 50%;
							transform: translateX(-50%);
							bottom: -0.5rem;
							border-left-color: $white;
							border-bottom-color: $black;	
						}
					}
				}
			}
		}
	}
}
@media screen and (min-width: $tablet) and (orientation: portrait) {
	.bc-breadcrumbs-links {
		height: 5vh;
	}
}
/* Projects page */
main {
	position: relative;
	.ca-projects {
		&-filter-title {
			font-weight: 200;
			padding-left: $gutter/2;
			padding-right: $gutter/2;
			margin-top: $gutter/2;
			margin-bottom: $gutter;
			width: 100%;
			flex: 1 1 100%;
			@media screen and (min-width: $desktop) {
				/*width:  (6/$gridColsCount)*100%;	
				margin-left: (2/$gridColsCount)*100%;*/
			}
		}	
	}
	
	.bc-content-container:first-child {
		.bc-cards-row, .bc-hero {
			padding-top: $gutter/2;
		}
	}
}
.ca-project-filters {
	.ca-project-filter {
		padding: $gutter/2 $gutter/2;
	}	
	@media screen and (min-width: $tablet) {
		.ca-project-filter {
			padding: $gutter/2 $gutter/4;
		}	
	}
}


.ca-projects {
	@media screen and (min-width:  500px) {
		flex-direction: row;
		flex-wrap: wrap;
	}
}

.bc-card {
	@include makeCols($cols: 10);
	flex-basis: 100% ;
	max-width: 100% ;
	&.bc-card--slide-up {
		.content-separator {
			margin-top: 		$gutter/2;
			margin-bottom: 	$gutter/2;
			
			width: 					2px;
			height: 				0.875rem;
			&:before {
				width: 		0.857rem;
				height: 	0.857rem;
				top: 			50%;
				background-color: rgba($black, 0.36);
				transform: translate(-50%, -50%) rotate(45deg);
			}
		}
	}
	
	@media screen and (min-width: 500px) {
		flex-basis: 50%;
		max-width: 	50%;
		.bc-card-content {
			.bc-card-title {
				font-size: 1rem;
			}
			.bc-card-subtitle, .bc-card-link {
				font-size: 0.8rem;
			}
			.bc-card-link {
				.svg-icon {
					max-height: 1rem;
					max-width: 	1rem;
				}	 
			}
		}
		&--slide-up { 
			.content-separator {
				&::before {
					width: 		0.8rem;
					height: 	0.8rem;
					border-width: 0.48rem;	
				}
			}
		}
		&--plain-text {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.75rem;
				}
			}
		}
	}
	@media screen and (min-width: 600px) {
		flex-basis: 33.333%;
		max-width: 	33.333%;
	}
	@media screen and (min-width: $tablet) {
		.bc-content {
			.bc-card-title {
				font-size: 1rem;
			}
			.bc-card-subtitle, .bc-card-link {
				font-size: 0.8rem;
			}
			.bc-card-link {
				.svg-icon {
					max-height: 1rem;
					max-width: 	1rem;
				}
			}
		}
		&--plain-text {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.75rem;
				}
			}
		}
	}
	@media screen and (min-width: $desktop) {
		flex-basis: 25%;
		max-width: 	25%;
	}
	@media screen and (min-width: $med) {
		flex-basis: 20%;
		max-width: 	20%;
	}
	@media screen and (min-width: $laptop) {
		flex-basis: 20%;
		max-width: 	20%;
	}
	/* Profile cards */
	&.person-card {
		.bc-card-content {
			top: calc(100% - (#{$gutter-unit}rem) - (#{1 * 1.3}rem) - (#{0.8 * $gutter-unit}rem) - (#{$gutter-unit/8}rem));
			> a {
				padding-top: 		$gutter / 2;
				padding-bottom: $gutter / 2;
			}
		}
		&:hover {
			margin-top: 0;
			.bc-card-content {
				top: 0;	
				background-color: $white;
			}
		}
		.bc-card-img { 
			&.is-square {
				position: relative;
				overflow: hidden;
				> img {
					position: absolute;
					top: calc(50% - (#{$gutter-unit}rem) - (#{1 * 1.3}rem) - (#{0.8 * $gutter-unit}rem) - (#{$gutter-unit/8}rem));
					left: 50%;
					width: 100%;
					transform: translate(-50%, -50%);
					object-fit: cover;
				}
				padding-top: 100%;
			}	
		}
		@media screen and (min-width: 600px) {
			flex-basis: 50%;
			max-width: 	50%;
			order: 3;
			&:nth-of-type(1), &:nth-of-type(2), &:nth-of-type(3), &:nth-of-type(4)  {
				order: 1;
			}
		}
		@media screen and (min-width: $tablet) {
			flex-basis: 33.333%;
			max-width: 	33.333%;
			&:nth-of-type(1), &:nth-of-type(2), &:nth-of-type(3), &:nth-of-type(4)  {
				order: 3;
			}
			&:nth-of-type(1), &:nth-of-type(2)  {
				order: 1;
			}
		}
		@media screen and (min-width: $desktop) {
			flex-basis: 25%;
			max-width: 	25%;
			&:nth-of-type(3), &:nth-of-type(4) {
				order: 1;
			}
		}
		@media screen and (min-width: $large) {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.25rem;
				}
				.bc-card-subtitle, .bc-card-link {
					font-size: 1rem;
				}
				.bc-card-link {
					.svg-icon {
						max-height: 1.25rem;
						max-width: 	1.25rem; 
					}
				}
			}
			&--plain-text {
				.bc-card-content {
					.bc-card-title {
						font-size: 2rem;
					}
				}
			}
		}
		
	}//.person-card
	/* Plain text card */
}//.bc-card

.ca-profiles {
	.bc-card--plain-text {
		@media screen and (min-width: 600px) {
			flex-basis: 50%;
			max-width: 	50%;
			order: 2;
		}
		@media screen and (min-width: $tablet) {
			flex-basis: 33.333%;
			max-width: 	33.333%;
		}
		@media screen and (min-width: $desktop) {
			flex-basis: 25%;
			max-width: 	25%;
			order: 3;
		}
	}
}
/* Full profile pages */
.ca-profile-projects {
	padding-top: 0;
	@include makeInset(); 
}
.person-qualifications {
	td { 
		&:first-child {
			font-weight: 500;
			padding-right: $gutter;
		}
	}
}

@import 'components/two-col-feature'; 
/** Two-col feature - has an image and a text block **/
.two-col-feature {
	align-items: flex-start;
	width: 100%;
	.short-col, .long-col {
		padding: 0 $gutter/2;
	}
	figure {
		position: static;
		padding-top: 0;
		img { 
			position: static;
			transform: none;
			width: 100%; 
		}
		max-width: 28rem;
	}
	figcaption {
		@include makeFlexbox($direction: row, $align: stretch);
		margin-bottom: $gutter*1.5;
		padding-top: 		$gutter;
		padding-bottom: $gutter;
		.svg-icon {
			fill: $brand-red;
			max-width: 	1.75rem;
			min-width: 	1.5rem;
			max-height: 1.75rem;
			min-height: 1.0rem;
			margin-top: 0.0rem;
			margin-right: $gutter/2;
		}
		> p {
			font-family: 	$serifFont;
			font-style: 	italic; 
			font-size: 1.166rem;
			line-height: 1.4;
			margin-top: 0;
			margin-left: $gutter/2;
		}
		position: relative;
		&:before {
			content: "";
			position: absolute;
			bottom: 0;
			left: 0;
			height: 0.21428571428571rem ;/*  3px @ 14px base font-size */ 
			width: 16%;
			background-color: $brand-red;
		}
	}
	.bc-general-content-wrap {
		h1, h2, h3, h4, h5, ul, p, blockquote, hr, .person-qualifications {
			max-width: 600px;
			margin-left: 	auto;
			margin-right: auto;
			@media screen and (min-width: $large) {
				max-width: 660px;
			}
			@media screen and (min-width: $xx-large) {
				max-width: 820px;
			}
		}
	}
	.content-subtitle { color: $brand-red; }
	.content-separator-wrap {
		display: none;
	}
	.content-separator { 
		width: auto;
		&:before { 
			left: 				-3.25rem;
			top: 					1.3rem;
			border-width: 0.5rem;
		}
	}
	@media screen and (min-width: $tablet) {
		flex-direction: row;
		.short-col {
			flex-basis: 40%;
			max-width: 	40%;
		}
		.long-col {
			flex-basis: 60%;
			max-width: 	60%;
		}
	}
	@media screen and (min-width: $laptop) {
		align-items: stretch;
		max-width: 90%;
		margin-left: 	auto;
		margin-right: auto;
		.content-separator-wrap {
			flex-basis: 10%;
			max-width: 	10%;
			//display: flex; 
			justify-content: center;
			@include makeCols(0.5);
			position: relative;
		}
		.content-separator {
			position: 	absolute;
			top: 				0;
			height: 		120%;
			width: 			0px;
			flex-grow:	0;
		}
	}
	
}// .two-col-feature 
/** -- Two-col feature - has an image and a text block -- **/
/** Media content extensions **/
.bc-video-embed {
	object, iframe {
		/*left: 			50%;
		transform: 	translateX(-50%);*/
	}
}
@media screen and (min-width: $med) {
	.bc-video-embed, .bc-general-content-wrap picture {
		max-width: 90%;
		margin-left: 	auto;
		margin-right: auto;
	}
}
/** -- Media content extensions -- **/

/** Hero block **/
.bc-content-container {
	&.bc-landing-hero-container {
		max-width: none;		
	}	
}

.bc-hero {
	padding: 0 $gutter;
	border-bottom: 	1px solid $shade-light;
	height: 85.6vh;
	position: relative;
	/* Hero scroll */
	&-scroll {
		> a {
			display: block;
		}
		position: absolute;
		top: auto;
		bottom: 0;
		right: 	calc(40px - #{$gutter});
		
		transform-origin: right bottom;
		transform: rotate(90deg);	
	
		width: 	56px;
		height: 40px;
		padding-top: 0.5rem;
		padding-bottom: 0.5rem;
		padding-left: 0.5rem;
		overflow: hidden;
		
		background-color: rgba($brand-blue, 0.72);
		font-size: 0.64rem;
		
		> span {
			@include makeLabel($uppercase: true, $color: $white);  
			font-size: 0.72rem;	 
			position: relative;
			&:after {
				content: "";
				height: 1px;
				width: 160%;
				background-color: $white;
				left: 	  0.96rem;
				bottom:  -0.36rem;
				position: absolute;
			}
		}
	}
	&.bc-landing-hero {
		&--video {
			@extend .bc-landing-hero ;
			.bc-hero-block {
				overflow: hidden;	
			}
			.bc-hero-header {
				background-color: rgba($black, 0.52);
				color: $white;
			}
			
		}
		height: 100vh; 
		padding: $gutter/2;
		.bc-hero-block {
			position: relative;
		}
		.bc-hero-image { 
			flex: 1 1 61.8%;
			overflow: hidden;
			position: relative;
			padding-top: 50%;
			img {
				position: absolute;
				top: 	50%;
				left: 50%;
				transform: translate(-50%, -50%);
				object-fit: cover;
			}
		}
		.bc-hero-video {
			object-fit: cover;
			position: absolute;
			top: 	0;
			left: 0;
			width: 	100%;
			height: 100%;
		}
		.bc-hero-header {
			position: absolute;
			padding-top: 		0;
			padding-bottom: 0;
			width: 100%;
			height: 10%;
			align-items: stretch;
			transition: background-color $buttonTransition $easing;
			&.menu-active {
				background-color: $white;
				.bc-header-logo {
					h1 {
						font-size: 1.125rem; 
						a {
							color: $black;	
						}
					}
				}
				.svg-icon {
					fill: $black;
					max-width: 	1.5rem;
					max-height: 1.5rem;
				}
				border-bottom: 1px solid $shade-lightest;
			}
		}
		.bc-hero-body {
			height: auto;
			flex-basis: 100-61.8%;
			@include makeFlexbox($direction: column, $justify: flex-start);
			
		}
		.bc-landing-hero-text {
			flex: 1 1 61.5%;
			@include makeFlexbox($direction: row, $justify: center, $align: center);
			padding-top: $gutter/2;
			padding-right: $gutter/2;
			padding-bottom: $gutter/2;
			background-color: $white;
			color: $black;
			border-bottom: 		4px solid $black; 
			
			.bc-landing-hero-quote {
				flex: 1 1 100%;
				@include makeFlexbox($direction: row, $align: stretch, $wrap: nowrap);
				
				
				
				.svg-icon {
					fill: $black;
					max-width: 	1.25rem;
					max-height: 1.25rem;
					margin-top: $gutter/8;
				}
			}
			.bc-landing-hero-quote-mark {
				flex: 1 1 14%;
				@include makeFlexbox($direction: row, $justify: center);
			}
			h1 {
				width: 86%;
				flex: 1 1 auto;
				margin-top: 0;
				font-family: $serifFont;
				line-height: 1.4;
				font-size: 1.25rem;
				@media screen and (min-width: 370px) {
					font-size: 1.4rem;
				}
				@media screen and (min-width: 400px) {
					font-size: 1.56rem;
				}
			}
			
		}// .bc-landing-hero-text
		.bc-landing-hero-links {
				flex: 1 1 50%;
				margin-top: 		0;
				margin-bottom: 	0;
				padding-left: 0; 
				width: 100%;
				@include makeFlexbox($direction: column, $justify: stretch, $align: stretch); 
				background-color: $offwhite;
				li {
					margin-bottom: 0;
					border-bottom: 1px dotted $black;
					&:last-child {
						border-bottom-color: transparent;
					}
					&.hero-people-link {
						.bc-color-square {
							&:after {
								background-color: $brand-red;	
							}
						}
					}
					&.hero-practice-link {
						.bc-color-square {
							&:after {
								background-color: $brand-blue;	
							}
						}
					}
					&.hero-projects-link {
						.bc-color-square {
							&:after {
								background-color: $brand-yellow;
							}
						}
					}
					list-style: none;
					flex: 1 1 auto;
					@include makeFlexbox($direction: row, $justify: flex-start, $align: stretch); 
				}//li
				a {
					@include makeFlexbox($direction: row, $align: center, $inline: true); 
					font-size: 				0.8rem;
					flex: 						1 1 auto;
					text-transform: 	uppercase;
					position: 				relative;	
					overflow: 				hidden;
					
				}
				
				.bc-arrow-hover, .bc-dots-hover {						
					width: 12.5%;
					height: 100%;
					right: 0;
					position: absolute;
				}
				.bc-dots-hover {
					&:after {
						content: 			"";
						position: 		absolute;
						top: 					50%;
						width: 				100%;
						height: 			1px;
						border-top: 	1px dotted $black;
					}
				}
				.bc-arrow-hover {
					background-color: darken($offwhite, 8%);
					@include makeFlexbox($direction: row, $justify: center, $align: center, $inline: true); 
				}
				.svg-icon {
					fill: 			$black;
					max-width: 	1.5rem;
					max-height: 100%;
				}
				
				@media screen and (max-width: $tablet - 1px) {
					.bc-roll-up-link {
						.bc-roll-up-link-default {
							top: -100%;
						}
						.bc-roll-up-link-active {
							background-color: transparent;
							top: 0;
						}
					}	
				}
			}//ul 
		@media screen and (min-width: 370px) and (min-height: 720px) and (max-width: 767px) {
			.bc-landing-hero-text {
				.bc-landing-hero-quote {
					.svg-icon {
						max-height: 1.75rem;
						max-width: 	1.75rem;
					}
				}
				h1 {	font-size: 1.5rem; }
			}
			.bc-landing-hero-links {	
				a {
					font-size: 1rem;
				}
			}
		}
		@media screen and (min-width: $desktop) and (orientation: portrait) {
			.bc-landing-hero-text {
				.bc-landing-hero-quote {
					.svg-icon {
						max-height: 2.5rem;
						max-width: 	2.5rem;
					}
				}
				h1 { font-size: 2.5rem;}
			}
			.bc-landing-hero-links {
				a {
					font-size: 1.5rem;
				}
				.bc-color-square {
					&:after {
						width: 	1.5rem;
						height: 1.5rem;
					}
				}
			}
		}
		@media screen and (min-width: 720px) {
			.bc-hero-header {
				z-index: 10;
			}
			.bc-hero-image {
				flex-basis: 100%;
				z-index: 1;
			}
			.bc-hero-body {
				flex-basis: auto;
				position: 	absolute;
				z-index: 		10;
				width: 			61.8%;
				top: 				auto;
				right: 			auto;
				left: 			10%;
				bottom: 		10%;
				transform: 	translate(-0%, 0%);
			}
			
			.bc-landing-hero-text {
				flex-basis: auto;
				border-bottom: 	none;
				margin-bottom: 		2.38%;
				padding-top: 			$gutter/2;
				padding-right: 		$gutter;
				padding-bottom: 	$gutter/2;
				.bc-landing-hero-quote-mark {
					flex-basis: 8%;
				}
				
				.bc-landing-hero-quote {
					
					.svg-icon {
						max-height: 1.25rem;
						max-width: 	1.25rem;
					}
				}
				h1 { font-size: 1.28rem;}
				
			}
			.bc-landing-hero-links {
				flex-basis: auto;
				flex-direction: row;
				flex-wrap: nowrap;
				li {
					flex-basis: 100/3*100%;
					background-color: $white;
				}
				.bc-color-square, a {
					padding-top: 		$gutter/2;
					padding-bottom: $gutter/2;
				}
				a {
					font-size: 0.8rem;
				}
				.bc-color-square {
					width: 24%;
					&:after {
						width: 	0.8rem;
						height: 0.8rem;
					}
				}
				.bc-arrow-hover, .bc-dots-hover {
					width: 24%;
				}
			}
		}// (min-width: $desktop) and (orientation: landscape)
		@media screen and (min-width: 850px) {
			.bc-hero-body {
				width: 			50%;
			}
		}
		@media screen and (min-width: 1200px) {
			.bc-hero-body {
				width: 44.1%;
				left: 33.333%;
				transform: translate(-50%, 0);
			}
			.bc-landing-hero-text {
				padding-right: 		$gutter*1.5;
				h1 {
					font-size: 1.5rem;
				}
			}
			.bc-landing-hero-links {
				a {
					font-size: 0.94rem;
				}
			}
		}
		@media screen and (min-width: $med) {
			
		}
		@media screen and (min-width: $laptop) {
			.bc-landing-hero-text {
				padding-right: 		$gutter*1.5;
				
			}
			.bc-color-square {
				&:after {
					width: 	1rem;
					height: 1rem;
				}
			}
			.bc-landing-hero-links { 
				a {
					font-size: 1rem;
				}
			}
		}// (min-width: $laptop) 
		
		@media screen and (min-width: $large) {
			
			.bc-landing-hero-text {
				padding-right: 		$gutter*1.5;
				h1 {
					font-size: 1.81rem
				}
			}
			.bc-landing-hero-links { 
				a {
					font-size: 1rem;
				}
			}
		}// @ (min-width: $large)
		@media screen and (min-width: $xx-large) {
			.bc-hero-body {
				width: 50%;
				bottom: 5%;
			}
			.bc-landing-hero-text {
				
				h1 {
//					font-size: 2rem; 
				}
			}
			.bc-color-square {
				&:after {
					width: 	1.25rem;
					height: 1.25rem;
				}
			}
			.bc-landing-hero-links { 
				a {
					font-size: 1.25rem;
				}
			}
		}
		
	}// &.bc-landing-hero
	&.bc-text-hero {
		.bc-hero-block {
			background-color: $brand-blue;
			color: 						$white;
			flex-basis: 			87.5%;
			width: 100%;
			margin-left: 	auto;
			margin-right: auto;

		}	
	}
	.bc-hero-body {
		.svg-icon {
			fill: $white;
			max-width: 		3rem;
			max-height: 	3rem;
		}
	}
	
	.bc-hero-body-text {
		color: $white;
		> h1 {
			font-size: 1.75rem;
		}
		top: 		50%;
		bottom: auto;
		left: 	0;
		background-color: transparent;
		
		transform: translate(0, -50%);
		width: 100%;
		
		.svg-icon {
			max-height: 2.5rem;
			max-width: 	2.5rem;
		}
	}
	.bc-hero-body-subtext {
		font-size: 			1.0rem;
		font-weight: 		300;
		line-height: 		1;
		margin-top: 		$gutter/2;
		p {	font-size: 1.125rem; margin-top: 0; margin-bottom: 0; margin-right: $gutter/2; }
		
		> a {
			@include makeFlexbox($direction: row, $justify: flex-start, $align: center);	
		}
	}
	.bc-hero-footer { 
		flex: 					0 1 10%;
		width: 					100%;
		position: 			relative;
		@include makeFlexbox($direction: row, $justify: center, $align: stretch);
		.bc-hero-footer-scroll {
			position: 			relative;
			@include 				makeFlexbox($direction: column, $justify: flex-start, $align: center);
			flex: 					1 1 50%;
			min-width: 			7rem;
			min-height: 100%;
			//clip-path: ellipse(0px 0 at 50%);
			&-link {
				width: 	8.5rem;
				height: 8.5rem;
				left: 50%;
				font-size: 0.65rem;
				text-align: center;
				border: 1px solid $shade-light ;
				border-radius: 50%;
				transition: background-color, border-color $medtrans $easing;
				&:hover, &:active, &:focus {
					background-color: $brand-yellow;
					border-color: $black;
					color: $black;
					.svg-icon {
						&.scroll-down-arrow {
							fill: $black;
						}
					}		
				}
			}
			.bc-hero-scroll-link-text {
				@include makeFlexbox($direction: column, $justify: center, $align: center);
				
			}
		}
		.svg-icon {
			&.scroll-down-arrow {
				fill: 			$black;
				max-height: 0.88rem;
				max-width: 	0.88rem;	
			
			}
		}
	}
	@media screen and (min-width: $tablet) {
		&.bc-content-row {
			flex-direction: column;
			flex-wrap: nowrap;
			align-items: center;
		}
		.bc-hero-footer {	
			height: 				calc(8.4vh - #{$gutter}/4);
			flex-basis: 10%; 
		}
		.bc-hero-body-text {
			
			h1 {
				font-size: 2rem;
			}
		}
	}
	@media screen and (min-width: $tablet) and (orientation: portrait){
		.bc-hero-body {
			height: 81.4vh;
		}
		.bc-hero-footer {
			.bc-hero-footer-scroll {
				
			}
			.svg-icon {
				&.scroll-down-arrow {
					max-height: 1rem;
					max-width: 	1rem;		
				}
			}
		}
	}
	@media screen and (min-width: $desktop) and (orientation: portrait){
		.bc-hero-footer {
			span {
					font-size: 1.25rem;
			}	
			.svg-icon {
				&.scroll-down-arrow {
					max-height: 1.5rem;
					max-width: 	1.5rem;		
				}
			}
		}
	}
	@media screen and (min-width: $desktop) {
		.bc-hero-body-text {
			width: 80%;
			left: 33.333%;
			transform: translate(-33.333%, -50%);
		}
		.bc-hero-block {
			&.bc-hero-bg {
				color: $white;
			}
		}
		.bc-hero-body-subtext {
			margin-top: $gutter;
		}
		.bc-hero-footer {
			flex-basis: 12.5%;
			
			.svg-icon {
				&.scroll-down-arrow {
					max-height: 1rem;
					max-width: 	1rem;
				}
			}
		}
	}
	@media screen and (min-width: $med) {
		&.bc-content-row {
			justify-content: center;
		}
		&.bc-text-hero {
			.bc-hero-block {
				&.bc-hero-bg {
					flex-basis: 80%;
					max-width: 	80%;	
				}
				max-width: 	80%;	
			}
			.bc-hero-body-text {
				width: $gr-large;
			}
	
		}
			}
	@media screen and (min-width: $large) {
		.bc-hero-footer {
			span {
					font-size: 0.8rem; 
			}	
			.svg-icon { 
				&.scroll-down-arrow {
					max-height: 1rem;
					max-width: 	1rem;
				}
			}
		}
	}
}// .bc-hero
/** Practice page uniqueness projects **/
.ca-unique-processes {
	@include makeInset();
}
/** General content **/
.two-col-content-feature, .bc-general-content-row {
	.content-separator-wrap {
		display: none;
	}
	.content-separator { 
		width: auto;
		&:before { 
			left: 				-3.25rem;
			top: 					1.3rem;
			border-width: 0.5rem;
		}
	}
	@media screen and (min-width: $med) {
		.content-separator-wrap {
			position: absolute;
			top: $gutter;
			right: $gutter/2;
			width: 5%;
			height: 100%;
			//display: flex; 
			justify-content: center;
			@include makeCols(0.5);
		}
		.content-separator {
			width: 0px;
			flex-grow: 0;
		}
	}
}
.bc-general-content-row {
	position: relative;
	.content-separator-wrap {
		right: auto;
		left: $gutter/2;
		top: $gutter*2;
		max-width: none;
		width: 10%;
		margin-left: 0%;
		display: none;
	}
	@media screen and (min-width: $tablet) {
		justify-content: center;
	}
}
.bc-general-content {
	@include makeCols(8);
	padding-top: $gutter*2;
	
	& &-wrap {
		h1, h2, h3, h4, h5, ul, p, blockquote, hr, .project-details {
			max-width: 680px;
			margin-left: 	auto;
			margin-right: auto;
			
			@media screen and (min-width: $med) {
				max-width: 700px;
			}
			@media screen and (min-width: $laptop) {
				max-width: 740px;
			}
			@media screen and (min-width: $large) {
				max-width: 820px;
			}
			@media screen and (min-width: $x-large) {
				max-width: 860px;
			}
			@media screen and (min-width: $xx-large) {
				max-width: 1000px;
			}
		}
	}
	h1 {
		&:first-child {
			margin-top: 0;
		}
	}
	hr {
		&.project-separator {
			margin-top: 		$gutter*1.5;
			margin-bottom: 	$gutter*1.75;
			width: 3rem;	
			border-color: transparent;
			border-top-color: $shade-mid;	
			border-width: 0;
			border-top-width: #{(1px/14px)}rem;
		}
	}
	picture, .bc-video-embed {
		margin-top: 		$gutter*1.75;
		margin-bottom: 	$gutter*1.75;
	}
	picture { 
		display: block; 
		img { max-width: 100%;}
	}
	@media screen and (min-width: $med) {
		flex-basis: 80%;
		max-width: 	80%;
	}
}

/* Full project content */
.project-intro {
	font-weight: 500;
	line-height: 1.6;
}
.project-recognition-list {
	padding-left: $gutter ;
}
.project-details {
	max-width: 680px;		
	margin-top: 		$gutter*1.5;
	margin-bottom: 	$gutter*1.75;
	padding-top: 			$gutter*1.5;
	padding-bottom: 	$gutter*1.5;
	border-top: 		1px solid $shade-light;
	border-bottom: 	1px solid $shade-light;
	
	> p {
		margin-top: 0;
		margin-bottom: $gutter/8;
	}
	@media screen and (min-width: $tablet){
		@include makeFlexbox($direction: column);
	}
}
blockquote {
	p:not(.blockquote-citation) {
		font-family: Palatino, serif;
		font-size: 1.0625rem;
		line-height: 1.5;
		font-style: italic;	
	}
	margin: $gutter*1.5 0 $gutter*1.75;
	padding-left: 	$gutter*1.5;
	padding-right: 	$gutter/2;
	position: relative;
	.svg-icon {
		max-height: 1rem;
		max-width: 	1rem;
		position: absolute;
		top: 	$gutter/4.5;
		left: 0.5rem;
	}
}
@media screen and (min-width: $tablet) {
	.bc-general-content-row {
		flex-direction: row;
		align-items: stretch;
	}
	.bc-general-content {
		
		hr {
			&.project-separator {
				width: 8rem;
			}
		}
	}
	blockquote {
		padding-left: 	$gutter*2;
		padding-right: 	$gutter*2;
		.svg-icon {
			max-height: 1.125rem;
			max-width: 	1.125rem;
			top: $gutter/6;
			left: 0.75rem;
		}
	}
	.project-details {
		flex-direction: row;
		flex-wrap: wrap;
		align-items: stretch;
		padding-top:		$gutter;
		padding-bottom:	$gutter;
		p {
			flex-basis: 50%;
		}
	}
}

/* Contact block */

.ca-contact-office {
	font-size: 			1.25rem;
	margin-top: 		0;
	margin-bottom: 	0;
}
.ca-contact-detail {
	margin-top: 0;
}


.ca-contact-component {
	&-row {
	 padding-top: 		$gutter*0;
	 padding-bottom: 	$gutter*1.5;
	}
	.ca-contact-heading-row {
		padding-top: 		$gutter*1.5;
		padding-bottom: $gutter*1.5;
	}
	.ca-contact-info, .ca-contact-map, .ca-contact-heading-col {
		@include makeCols(10);
	}
	.ca-contact-info {
		margin-bottom: $gutter;
	}
	.ca-contact-heading {
		&-col {
			width: 100%;
		}
		margin-top: 0;	
	}
	.ca-contact-col {
		@include makeCols(10/3);
		margin-bottom: $gutter;
	}
	.ca-contact-office {
		font-size: 1rem;
	}
	.ca-contact-map-embed {
		@include objectEmbed(1/1);	
	}
	@media screen and (min-width: $tablet) {
		&-row {
			flex-direction: column;
			flex-wrap: 			nowrap;
		}
		
		.ca-contact-map-embed {
			padding-top: (2/3)*100%;
		}
	}
	@media screen and (min-width: $desktop) { 
		&-row {
			flex-direction: row;
			flex-wrap: 			nowrap;
		}
		.ca-contact-info {
			margin-bottom: 0;
			flex-basis: 40%;
			max-width: 40%;
			.bc-content-row {
				flex-direction: column;
			}
			.ca-contact-col {
				flex-basis: 100%;
				max-width: 	100%;
			}
		}
		.ca-contact-addresses {
			flex-direction: row;
		}
		.ca-contact-map {
			flex-basis: 60%;
			max-width:  60%;
		}
		.ca-contact-map-embed {
			padding-top: (9/16)*100%;
		}
	}
	@media screen and (min-width: $laptop) {
		&__wrap {
			width: 80%;
			margin-left:  auto;
			margin-right: auto;
		}
	}
}// .ca-contact-component
/** Back links at the bottom of inner pages **/
.page-bottom-links {
	height: #{(84px/14px)}rem;
	.bc-content-row {
		flex-direction: row;
		align-items: flex-end;
		justify-content: space-between;
		padding-top: 0;
		padding-bottom: $gutter/2; 
	}
	.is-label {
		font-size: 0.8rem;
	}
	& &-back, & &-top {
		padding-left: 	$gutter/2;
		padding-right: 	$gutter/2;
	}
	& &-back {
		@include makeFlexbox($direction: row, $align: stretch);
		.icon-wrap, a {
			display: inline-flex;
			align-items: center;
			padding: $gutter/4 $gutter/4;
		}
		.icon-wrap {
			background-color: $shade-mid;
			margin-right: $gutter/8;
		}
		.svg-icon {
			fill: 			$white;
			max-width: 	1.5rem;
			max-height: 1.5rem;
		}
		a {
			padding-left: 	$gutter/2;
			padding-right: 	$gutter/2;
			background-color: $shade-lightest;
			transition: background-color $buttonTransition $easing;
			&:hover, &:focus, &:active {
				background-color: $shade-mid;
				color: $white;
			}
		}
	}
	& &-top {
		position: relative;
		min-height: 5.25rem;
		min-width: 	5.25rem;
		padding: 0; 
		padding-top: 0.32rem;
		align-self: flex-end;
		transition: opacity 600ms $easing; 
		&:hover, &:active, &:focus {
			a {
				color: $white;	
			}
			.svg-icon {
				fill: $shade-mid;
			}
		}
		&:hover {
			cursor: pointer;
		}
		.svg-icon {
			position: absolute;
			width:  	100%;
			height: 	100%;
			z-index: 	0;
			fill: 		$grey-light; 
			@include 	makeButtonTransition(fill);
		}
		a {
			text-decoration: underline;
			display: inline-flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			padding-top: $gutter / 2;
			position: absolute;
			width:  100%;
			height: 100%;
			z-index: 0;
			
		}
		&.is-hidden {
			opacity: 0;
		}
		&.is-visible { 
			opacity: 1;
		}
		&.is-fixed, &.is-absolute {
			opacity: 1;
			bottom: $gutter / 2;
			&.is-visible { 
					opacity: 1;
			}	
		}
		&.is-fixed {
			margin-right: 0;
			position: fixed;
			left: 	auto;
			right: 	$gutter / 2;
		}
	}
	&.single-link {
		.bc-content-row {
			justify-content: flex-end;
		}
	}
	@media screen and (min-width: $desktop) {
		.bc-content-row {
			padding-top: $gutter;
		}
		& &-top {
			margin-right: 8%;
		}
	}
	@media screen and (min-width: $desktop) {
		height: #{(120px/16px)}rem;
	}
}
/** -- Back links at the bottom of inner pages -- **/
@import 'components/colour-schemes'; 
@import 'structure/footer'; 


/** Flickity slider test slider-test.html **/
.bc-slider {
	@include makeFlexbox(column, flex-start, stretch);
	padding-top: 		0;
	padding-bottom: 0;
	&.bc-hero {
		height: 85.6vh;
		.bc-hero-footer {
			flex-direction: column;
			justify-content: space-between;
			align-items: center;
		}
	}
	&-slides {
		flex: 					1 1 92%;
		max-height: 		92%;
		padding-top: 		$gutter/2;
		padding-bottom: $gutter/2;
			
	}
	&-slide {
		width: 					100%;
		height: 				100%;
		@include makeFlexbox(row, center, center);
		margin-left: 	$gutter/2;
		margin-right: $gutter/2;
		img {
			display: 		block;
			width: 			auto;
			min-width: 	0;
			max-height: 100%;
		}
	}
	&-controls {
		width: 100%;
		min-height: 86%;
		background-color: $white;
		@include makeFlexbox(row, center, stretch);
		&__next, &__prev, &__counter {
			max-width: 	5rem;
		}
		&__next, &__prev {
			flex: 1 1 auto;
			@include makeFlexbox(column, center, center);
			
			background-color: $offwhite;
			transition: background-color $quicktrans $easing;
			&:hover, &:active, &:focus {
				background-color: $shade-superlight;
				outline: 1px dotted $shade-light;
			}
			&:hover {
				cursor: pointer;
			}
		}
		&__counter {
			flex: 1 1 auto;
			@include makeFlexbox(row, center, center);
			font-size: 1rem;
		}
		.svg-icon {
			max-width: 	1.25rem;
			max-height: 1.25rem;
			
		}
	}
	
	@media screen and (max-width: 530px)  {
		&-controls {
			&__next, &__prev, &__counter {
				height: 		3rem;
				width: 			3rem;
				.svg-icon {
					max-width:   1.25rem;
					max-height:  1.25rem;
				}
			}	
			&__counter {
				font-size: 0.8rem;
			}
		}
	}
	@media screen and (min-width: 531px) and (max-width: 1023px)   {
		&-controls {
			&__next, &__prev, &__counter {
				height: 		4rem;
				width: 			4rem;
				.svg-icon {
					max-width:   1.75rem;
					max-height:  1.75rem;
				}
			}
		}
	}
	@media screen and (max-width: 1023px) {
		&.bc-hero {
			.bc-hero-footer {
				position: static;
			}
		}
		&-controls {
			height: 0;
			overflow: visible;
			position: inherit;
			&__next, &__prev, &__counter {
				position: absolute;
			}
			&__next, &__prev {
				background-color: rgba($white, 0.84);
				top: 50%;
				transform: translateY(-50%);
			}
			&__prev {
				left: $gutter/4;
			}
			&__next {
				right: $gutter/4;
			}
			&__counter {
				background-color: rgba($black, 0.72);
				color: 						$white;
				
				right: 			$gutter;
				bottom: 		$gutter/3;
			}
		}
	}
	
	@media screen and (min-width: $desktop)  {
		
		&-controls {
			position: absolute;
			right: 0;
			top: 50%;
			transform: translateY(-50%);
			width: 20%;
			&__next, &__prev, &__counter {
				padding: 0;
				flex: 			1 1 calc(100%/3);
				max-width: 	calc(100%/3);
			}
		}
	}
	@media screen and (min-width: $desktop) and (orientation: portrait) {
		&.bc-hero {
			.bc-slider-slides {
				flex-basis: 94.8%;
				max-height: 94.8%;
			}
			.bc-hero-footer {
				flex-basis: 7.2%;
				max-height: 7.2%;
				align-items: center;
			}
		}
	}
}

//Enable flickity accessibility
/*.flickity-enabled:focus .flickity-viewport {
  outline: thin dotted;
  outline: 5px auto -webkit-focus-ring-color;
}*/


