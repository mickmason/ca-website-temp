@import 'framework/variables';
@import 'framework/mixins';
@import 'vendor/normalize';


html {
  font-size: 14px;
  line-height: $gutter-unit; 
	color: $black;
}

/*@media screen and (min-width: 320px) {
  html { 
    font-size: calc(14px + 8 * ((100vw - 320px) / (1920 - 320)));
  }
}*/

@media screen and (min-width: $tablet) {
  html {
    font-size: 16px; 
  }
}
@media screen and (min-width: $large) {
  html {
    font-size: 18px; 
  }
}
@media screen and (min-width: $xx-large) {
  html {
    font-size: 24px;
  }
}
body {
  font-family: azo-sans-web, sans-serif;
}
h1, h2, h3, h4, h5 {
  line-height: 1.3;
	margin-top: $gutter;
  margin-bottom: 0;
}
h1 { font-size: 2.25rem; font-weight: 300; }
h2 { font-size: 1.5rem; }
h3 { font-size: 1.25rem; }
h4 { font-size: 1.125rem }
h5 { font-size: 1rem; }
p {
	margin-top: $gutter;
	margin-bottom: $gutter/8;
}
ul {
	li {
		margin-bottom: $gutter/4;
	}
}
.leader-text {
	font-size: 1.125rem;
}
strong {
	font-weight: 500;
}
a {
  color: inherit;
}
.svg-icon {
	fill: $black;
}
/* Utils */
.is-label {
  @include makeLabel();
}
.is-inset {
	@include makeInset();
}
.ca-button {
	@include makeFlexbox($direction: row, $align: stretch);
	.icon-wrap, a {
		display: inline-flex;
		align-items: center;
	}
	.icon-wrap {
		background-color: $shade-mid;
		padding: $gutter/4 $gutter/4;
		margin-left: 	$gutter/8;
		margin-right: $gutter/8;
	}
	.svg-icon {
		fill: 			$white;
		max-width: 	1.5rem;
		max-height: 1.5rem;
	}
	a {
		font-size: 0.8rem;
		font-weight: 300;
		color: $black;
		padding-left: 	$gutter/2;
		padding-right: 	$gutter/2;
		background-color: $shade-lightest;
		transition: background-color $buttonTransition $easing;
		&:hover, &:focus, &:active {
			background-color: $shade-mid;
			color: $white;
		}
	}
}
.bc-roll-up-link {
	position: relative;
	overflow: hidden;
	
	&-default, &-active { 
		text-align: center;
		position: absolute;
		@include makeFlexbox(row, center, center);
		width: 100%;
	}
	&-default {
		top: 0;
	}
	&-active {
		top: 100%;
	}	
	&-default, &-active {
		transition: top $buttonTransition $easing ;
	}
	&:hover, &:active, &:focus {
		.bc-roll-up-link-default {
			top: -100%;
		}
		.bc-roll-up-link-active {
			top: 0
		}	
	}
}
.ca-arrow-link {
	font-weight: bold;
	@include makeFlexbox($direction: row, $justify: flex-start, $align: center);
	.svg-icon {
		max-width: 	1.5rem;
		max-height: 1.5rem;
		margin-right: $gutter/4 ;
		margin-left: 	$gutter/4 ;
	}
}
.content-separator {
	flex: 					1 1 auto;
	border-left: 		2px dotted rgba($black, 0.24); 
	position: relative; 
	&:before {
		content: "";
		position: absolute;
		width: 		$gutter*1.5;
		height: 	$gutter*1.5;
		background-color: rgba($black, 0.36);
		border: 0.143rem solid $white; /* 2px @ 14px */
		transform: translate(50%, -50%);
	}
}
.leader-text-squares {
	width: calc((2 * (1rem + #{$gutter/2})) + 1.68rem);
	@include makeFlexbox(row, space-between, center);
	.square {
		width: 	1.0rem;
		height: 1.0rem;
		background-color: $brand-yellow;
		&:nth-child(2) {
			background-color: $black;
			width: 	1.68rem;
		}
	}
}
.bc-color-square {
	width: 14%;
	display: inline-block;
	position: relative;
	&:after {
		content: "";
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 	1.0rem;
		height: 1.0rem;
		background-color: $brand-blue;
		@media screen and (min-width: 400px) {
			width: 	1.125rem;
			height: 1.125rem;
		}
	}
}
@import 'framework/grid'		;
@import 'framework/layout'	; 
@import 'framework/animations'; 
@import 'framework/header'; 
@import 'components/bc-inner-nav';
@import 'components/bc-breadcrumbs';
@import 'components/bc-hero';
@import 'components/bc-media';
@import 'components/bc-cards';
@import 'framework/tables';
@import 'framework/general-content';

/* Inner page */

.bc-inner-nav {
	@include makeCols(10);
	& li &-label {
		display: inline;
		font-size: 0.8rem;
		font-weight: 300;
		text-decoration: none;
		text-align: right;
		padding-right: $gutter/2;
		
	}
	& li &-icon {
		padding-left: $gutter/2;
		.svg-close-icon {
			display: none;
		}
		&.active {
			.svg-funnel-icon {
				display: none;
			}
			.svg-close-icon {
				display: inherit;
			}
		}
	}
	& &-dropdown {
		font-size: 0.8rem;
		&.active {
			padding-top: 		$gutter/8;
			padding-bottom: $gutter/12;
			
			overflow: visible;
		}
		a {
			padding-top: 		$gutter/10;
			padding-bottom: $gutter/10;
			&.active {
				position: relative;
				&::before {
					content: "";
					position: absolute;
					left: -0.57rem;
					top: 50%;
					transform: translateY(-50%);
					border-width: 			0.285rem;
					border-color: 			transparent;
					border-style: 			solid;
					border-left-color: 	rgba($black, 0.8);
				}
			}
			&:hover, &:active, &:focus {
				background-color: $black;
				color: $brand-yellow;
			}
		}
	}
	li {
		&:hover, &:active, &:focus {
			> a:not(.bc-inner-nav-icon) {
				background-color: transparent;
			}
			> .bc-inner-nav-label {
				background-color: transparent;
			}		
		}
	}
	@media screen and (min-width: $desktop) {
		& &-label {
			font-size: 0.72rem;
		}
	}
}
.bc-breadcrumbs {
	padding-top: 0;
}
.bc-breadcrumbs-links {
	height: calc(6.4vh - $gutter/2);
	padding-top: 		$gutter/1.5;
	padding-bottom: $gutter/4;
	&.active {
		height: auto;
	}
	&.bc-inner-nav {
		> li {
			.bc-inner-nav-label, .bc-inner-nav-dropdown > li {
				text-transform: none;	
			}
			font-weight: normal;
			width: 100%;
			
		}
	}
}

@media screen and (min-width: $tablet) {
	.bc-breadcrumbs-links {
		&.bc-inner-nav {
			.bc-inner-nav-label, .bc-inner-nav-icon {
				align-self: flex-end;
			}
			.bc-inner-nav-icon {
				display: none;
			}
			li .bc-inner-nav-dropdown {
				min-width: 0;
				height: auto;
				display: inline-flex;
				flex-direction: row;
				align-items: center;
				overflow: visible;
				> li {
					padding-right: $gutter/4; 
					a {
						padding-top: 0;
						padding-bottom: 0;
					}
				}
				a {
					&.active {
						&:before {
							top: auto;
							left: 50%;
							transform: translateX(-50%);
							bottom: -0.5rem;
							border-left-color: $white;
							border-bottom-color: $black;	
						}
					}
				}
			}
		}
	}
}
@media screen and (min-width: $tablet) and (orientation: portrait) {
	.bc-breadcrumbs-links {
		height: 5vh;
	}
}
/* Projects page */
main {
	position: relative;
	.ca-projects {
		&-filter-title {
			font-weight: 200;
			padding-left: $gutter/2;
			padding-right: $gutter/2;
			margin-top: $gutter/2;
			margin-bottom: $gutter;
			width: 100%;
			flex: 1 1 100%;
			@media screen and (min-width: $desktop) {
				/*width:  (6/$gridColsCount)*100%;	
				margin-left: (2/$gridColsCount)*100%;*/
			}
		}	
	}
}
.ca-project-filters {
	.ca-project-filter {
		padding: $gutter/2 $gutter/2;
	}	
	@media screen and (min-width: $tablet) {
		.ca-project-filter {
			padding: $gutter/2 $gutter/4;
		}	
	}
}


.ca-projects {
	@media screen and (min-width:  500px) {
		flex-direction: row;
		flex-wrap: wrap;
	}
}

.bc-card {
	@media screen and (min-width: 500px) {
		flex-basis: 50%; 
		max-width: 	50%;
		.bc-card-content {
			.bc-card-title {
				font-size: 1.20rem;
			}
			.bc-card-subtitle {
				font-size: 1rem;
			}
			.bc-card-link {
				font-size: 1.125rem;
			}
			&-heading {
				&-text {
					font-size: 1.20rem;	
				}
				.svg-icon {
					max-height:  2rem;
					max-width:   2rem;
				}
			}
		}
		&--slide-up-overlay {
			.bc-card-content {
				&-heading {
					&-text {
						font-size: 1.225rem;
						margin-left: $gutter/2;
					}
				}
			}
		}
		&--plain-text {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.75rem;
				}
			}
		}
		&.ca-values-card {
			.bc-card-content {
				.svg-icon {
					max-width: 	2.5rem;
					max-height: 2.5rem;
				}
				&-heading {
					&-text {
						font-size: 1.5rem;
					}
				}
			}
			.ca-values-card__value { 
				font-size: 1.125rem;
			}
		}//&.ca-values-card
	}// @ max-width 500px
	@media screen and (min-width: 600px) {
		flex-basis: 33.333%;
		max-width: 	33.333%;
	}
	@media screen and (min-width: $tablet) {
		.bc-card-content {
			.bc-card-title {
				font-size: 1.125rem;
			}
			.bc-card-subtitle {
				font-size: 0.9rem;
			}
			.bc-card-link {
				font-size: 0.95rem;
			}
		}	
		&--plain-text {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.75rem;
				}
			}
		}
	}
	@media screen and (min-width: $desktop) {
		flex-basis: 25%;
		max-width: 	25%;
	}
	@media screen and (min-width: $med) {	
		.bc-card-content {
			.bc-card-title {
				font-size: 1.25rem;
			}
			.bc-card-subtitle {
				font-size: 1.0rem; 
			}
			.bc-card-link {
				font-size: 1.125rem;
			}
			&-heading {
				&-text {
					font-size: 1.375rem;	
				}
				.svg-icon {
					max-height:  2.125rem;
					max-width:   2.125rem;
				}
			}
		}
		
		&--plain-text {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.75rem;
				}
			}
		}
		&.ca-values-card {
			.bc-card-content {
				&-heading {
					&-text {
						font-size: 1.5rem;
					}
				}
			}
			.ca-values-card__value { 
				font-size: 1.125rem;
			}
		}//&.ca-values-card
		
	}
	@media screen and (min-width: $laptop) {
		flex-basis: 20%;
		max-width: 	20%;
		.bc-card-content {
			.bc-card-title {
				font-size: 1.125rem;
			}
			.bc-card-subtitle, .bc-card-link {
				font-size: 0.9rem;
			}
			.bc-card-link {
				font-size: 1rem;
			}
			&-heading {
				&-text {
					font-size: 1.20rem;	
				}
				.svg-icon {
					max-height:  2rem;
					max-width:   2rem;
				}
			}
		}
		&--slide-up-overlay {
			.bc-card-content {
				&-heading {
					&-text {
						font-size: 1.25rem;
					}
				}
			}
		}
		&--plain-text {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.75rem;
				}
			}
		}
		&.ca-values-card {
			.bc-card-content {
				&-heading {
					&-text {
						font-size: 1.25rem;
					}
				}
			}
			.ca-values-card__value { 
				font-size: 1rem;
			}
			.ca-values-card__person {
				font-size: 0.9rem;
			}
		}//&.ca-values-card
	}
	@media screen and (min-width: $x-large) {
		.bc-card-content {
			.bc-card-title {
				font-size: 1.375rem;
			}
			.bc-card-subtitle, .bc-card-link {
				font-size: 1rem;
			}
			bc-card-link {
				font-size: 1.125rem;
			}
		}
		&--slide-up-overlay {
			.bc-card-content {
				&-heading {
					&-text {
						font-size: 1.375rem;
					}
				}
			}
		}
		&--plain-text {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.75rem;
				}
			}
		}
		&.ca-values-card {
			.bc-card-content {
				&-heading {
					&-text {
						font-size: 1.5rem;
					}
				}
			}
			.ca-values-card__value { 
				font-size: 1.125rem;
			}
		}//&.ca-values-card
	}
	@media screen and (min-width: $xx-large) {
		&:not(.bc-card--plain-text) {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.125rem;
				}
				.bc-card-subtitle, .bc-card-link {
					font-size: 0.9rem;
				}
				&-heading {
					&-text {
						font-size: 1.125rem;	
					}
				}
			}
			
		}
		&--plain-text {
			.bc-card-content {
				.bc-card-title {
					font-size: 1.5rem;
				}
				.svg-icon {
					max-width: 2.75rem;
					max-height: 2.75rem;
				}
			}
		}
		&.ca-values-card {
			.bc-card-content {
				&-heading {
					margin-bottom: 0.75rem;
					&-text {
						font-size: 1.25rem;
					}
				}
				.svg-icon {
					width: 2.25rem;
					height: 2.25rem;
				}
			}
			.ca-values-card__value { 
				font-size: 1rem;
				margin-bottom: 0.75rem;
			}
			.ca-values-card__person {
				font-size: 0.9rem;
			}
		}//&.ca-values-card
	}
}//.bc-card

.ca-profiles {
	.bc-card {
		order: 1;
		&--plain-text {
			order: 2;
		}
	}
	@media screen and (min-width: 600px) {
		.bc-card {
			order: 3;
			&:nth-child(-n+1) {
				order: 1;
			}
			&--plain-text {
				order: 2;
			}
		}
	}
	@media screen and (min-width: $tablet) {
		.bc-card {
			&:nth-child(-n+2) {
				order: 1;
			}
		}
	}
	
	@media screen and (min-width: $desktop) {
		.bc-card {
			&:nth-child(-n+3) {
				order: 1;
			}
		}
	}
	@media screen and (min-width: $laptop) {
		.bc-card {
			&:nth-child(-n+4) {
				order: 1;
			}
		}
		
	}
}
/* Full profile pages */
.ca-profile-projects {
	padding-top: 0;
	@include makeInset(); 
}
.person-qualifications {
	td { 
		&:first-child {
			font-weight: 500;
			padding-right: $gutter;
		}
	}
}

@import 'components/two-col-feature'; 
@import 'components/bc-landing-hero-video';  
/** Two-col feature - has an image and a text block **/
.two-col-feature {
	align-items: flex-start;
	width: 100%;
	.short-col, .long-col {
		padding: 0 $gutter/2;
	}
	figure {
		position: static;
		padding-top: 0;
		img { 
			position: static;
			transform: none;
			width: 100%; 
		}
		max-width: 28rem;
	}
	figcaption {
		@include makeFlexbox($direction: row, $align: stretch);
		margin-bottom: $gutter*1.5;
		padding-top: 		$gutter;
		padding-bottom: $gutter;
		.svg-icon {
			fill: $brand-red;
			max-width: 	1.75rem;
			min-width: 	1.5rem;
			max-height: 1.75rem;
			min-height: 1.0rem;
			margin-top: 0.0rem;
			margin-right: $gutter/2;
		}
		> p {
			font-family: 	$serifFont;
			font-style: 	italic; 
			font-size: 1.166rem;
			line-height: 1.4;
			margin-top: 0;
			margin-left: $gutter/2;
		}
		position: relative;
		&:before {
			content: "";
			position: absolute;
			bottom: 0;
			left: 0;
			height: 0.21428571428571rem ;/*  3px @ 14px base font-size */ 
			width: 16%;
			background-color: $brand-red;
		}
	}
	.bc-general-content-wrap {
		h1, h2, h3, h4, h5, ul, p, blockquote, hr, .person-qualifications {
			max-width: 600px;
			margin-left: 	auto;
			margin-right: auto;
			@media screen and (min-width: $large) {
				max-width: 660px;
			}
			@media screen and (min-width: $xx-large) {
				max-width: 820px;
			}
		}
	}
	.content-subtitle { color: $brand-red; }
	.content-separator-wrap {
		display: none;
	}
	.content-separator { 
		width: auto;
		&:before { 
			left: 				-3.25rem;
			top: 					1.3rem;
			border-width: 0.5rem;
		}
	}
	@media screen and (min-width: $tablet) {
		flex-direction: row;
		.short-col {
			flex-basis: 40%;
			max-width: 	40%;
		}
		.long-col {
			flex-basis: 60%;
			max-width: 	60%;
		}
	}
	@media screen and (min-width: $laptop) {
		align-items: stretch;
		max-width: 90%;
		margin-left: 	auto;
		margin-right: auto;
		.content-separator-wrap {
			flex-basis: 10%;
			max-width: 	10%;
			//display: flex; 
			justify-content: center;
			@include makeCols(0.5);
			position: relative;
		}
		.content-separator {
			position: 	absolute;
			top: 				0;
			height: 		120%;
			width: 			0px;
			flex-grow:	0;
		}
	}
	
}// .two-col-feature 
/** -- Two-col feature - has an image and a text block -- **/
/** Media content extensions **/
.bc-video-embed {
	object, iframe {
		/*left: 			50%;
		transform: 	translateX(-50%);*/
	}
}
@media screen and (min-width: $med) {
	.bc-video-embed, .bc-general-content-wrap picture {
		max-width: 90%;
		margin-left: 	auto;
		margin-right: auto;
	}
}

/** General content **/
.two-col-content-feature, .bc-general-content-row {
	.content-separator-wrap {
		display: none;
	}
	.content-separator { 
		width: auto;
		&:before { 
			left: 				-3.25rem;
			top: 					1.3rem;
			border-width: 0.5rem;
		}
	}
	@media screen and (min-width: $med) {
		.content-separator-wrap {
			position: absolute;
			top: $gutter;
			right: $gutter/2;
			width: 5%;
			height: 100%;
			//display: flex; 
			justify-content: center;
			@include makeCols(0.5);
		}
		.content-separator {
			width: 0px;
			flex-grow: 0;
		}
	}
}
.bc-general-content-row {
	position: relative;
	.content-separator-wrap {
		right: auto;
		left: $gutter/2;
		top: $gutter*2;
		max-width: none;
		width: 10%;
		margin-left: 0%;
		display: none;
	}
	@media screen and (min-width: $tablet) {
		justify-content: center;
	}
}
.bc-general-content {
	& &-wrap {
		.project-details {
			max-width: 680px;
			margin-left: 	auto;
			margin-right: auto;
			
			@media screen and (min-width: $med) {
				max-width: 700px;
			}
			@media screen and (min-width: $laptop) {
				max-width: 740px;
			}
			@media screen and (min-width: $large) {
				max-width: 820px;
			}
			@media screen and (min-width: $x-large) {
				max-width: 860px;
			}
			@media screen and (min-width: $xx-large) {
				max-width: 1000px;
			}
		}
	}
	
}
blockquote {
	p:not(.blockquote-citation) {
		font-family: $serifFont;
		font-size: 1.26rem;
		line-height: 1.5;
		font-style: italic;	
	}
	margin: $gutter*1.5 0 $gutter*1.75;
	padding-left: 	$gutter*1.5;
	padding-right: 	$gutter/2;
	position: relative;
	.svg-icon {
		max-height: 1rem;
		max-width: 	1rem;
		position: absolute;
		top: 	$gutter/4.5;
		left: 0.5rem;
	}
}
@media screen and (min-width: $tablet) {
	.bc-general-content-row {
		flex-direction: row;
		align-items: stretch;
	}
	.bc-general-content {
		hr {
				width: 8rem;
		}
	}
	blockquote {
		padding-left: 	$gutter*2;
		padding-right: 	$gutter*2;
		.svg-icon {
			max-height: 1.125rem;
			max-width: 	1.125rem;
			top: $gutter/6;
			left: 0.75rem;
		}
	}
	.project-details {
		flex-direction: row;
		flex-wrap: wrap;
		align-items: stretch;
		padding-top:		$gutter;
		padding-bottom:	$gutter;
		p {
			flex-basis: 50%;
		}
	}
}

/* Full project content */
.project-intro {
	font-weight: 500;
	line-height: 1.6;
}
.project-recognition-list {
	padding-left: $gutter ;
}
.project-details {
	p {
		flex-basis: 50%;
	}		
	margin-top: 		$gutter*1.5;
	margin-bottom: 	$gutter*1.75;
	padding-top: 			$gutter*1.5;
	padding-bottom: 	$gutter*1.5;
	border-top: 		1px solid $shade-light;
	border-bottom: 	1px solid $shade-light;
	> p {
		margin-top: 0;
		margin-bottom: $gutter/8;
	}
	&__list {
		list-style: none;
		padding: 0;
		margin: 0;
		width: 100%;
		@include makeFlexbox(row, center);
		flex-wrap: wrap;
	}
	&__item {
		flex: 1 1 50%;
		@include makeFlexbox(column, flex-start, center);
		padding-left: 	$gutter/2;
		padding-right: 	$gutter/2;
		margin-bottom: 	$gutter/2;
	}
	&__number {
		font-size: 3rem;
		margin-bottom: $gutter/4;	
	}
	&__fact  {
		font-size: 1.125rem;
		font-weight: 300;
	}
	@media screen and (min-width: $tablet) {
		&__list {
			flex-direction: row;
		}
		&__item {
			flex-basis: 50%;
		}
	}
	@media screen and (min-width: $desktop) {
		&__list {
			flex-direction: row;
			justify-content: flex-start;
			flex-wrap: nowrap;
		}
		&__item {
			flex-basis: 25%;
		}
	}
}
/* Contact block */
.ca-contact-component {
	&__wrap {
		flex: 1 1 100%;
		@include makeRow();
		padding-left: 0;
		padding-right: 0;
	}
	.ca-contact-info, .ca-contact-map {
		@include makeCols(5);
	}
	.ca-contact-info {
		margin-bottom: $gutter;
	}
	.ca-contact-heading {
		&-col {
			width: 100%;
		}
		margin-top: 0;	
	}
	.ca-contact-col {
		@include makeCols(10/3);
		margin-bottom: $gutter;
	}
	.ca-contact-office {
		font-size: 1rem;
	}
	.ca-contact-map-embed {
		@include objectEmbed(1/1);	
	}
	@media screen and (min-width: $tablet) {
		
		.ca-contact-map-embed {
			padding-top: 100%;
		}
	}
	@media screen and (min-width: $desktop) { 
		
		.ca-contact-info {
			margin-bottom: 0;	
			.bc-content-row {
				flex-direction: column;
			}
			.ca-contact-col {
				flex-basis: 100%;
				max-width: 	100%;
			}
		}
		.ca-contact-addresses {
			flex-direction: row;
		}
		.ca-contact-map {
		}
		.ca-contact-map-embed {
			padding-top: 100%;
		}
	}
	@media screen and (min-width: $large) {
		
		
	}
}// .ca-contact-component
/** Back links at the bottom of inner pages **/
.page-bottom-links {
	height: #{(84px/14px)}rem;
	.bc-content-row {
		border-top: none;
		flex-direction: row;
		align-items: flex-end;
		justify-content: space-between;
		padding-top: 0;
		padding-bottom: $gutter/2; 
	}
	.is-label {
		font-size: 0.8rem;
	}
	& &-back, & &-top {
		padding-left: 	$gutter/2;
		padding-right: 	$gutter/2;
	}
	& &-back {
		@include makeFlexbox($direction: row, $align: stretch);
		.icon-wrap, a {
			display: inline-flex;
			align-items: center;
			padding: $gutter/4 $gutter/4;
		}
		.icon-wrap {
			background-color: $shade-mid;
			margin-right: $gutter/8;
		}
		.svg-icon {
			fill: 			$white;
			max-width: 	1.5rem;
			max-height: 1.5rem;
		}
		a {
			padding-left: 	$gutter/2;
			padding-right: 	$gutter/2;
			background-color: $shade-lightest;
			transition: background-color $buttonTransition $easing;
			&:hover, &:focus, &:active {
				background-color: $shade-mid;
				color: $white;
			}
		}
	}
	& &-top {
		position: relative;
		min-height: 5.25rem;
		min-width: 	5.25rem;
		padding: 0; 
		padding-top: 0.32rem;
		align-self: flex-end;
		transition: opacity 600ms $easing; 
		&:hover, &:active, &:focus {
			a {
				color: $white;	
			}
			.svg-icon {
				fill: $shade-mid;
				stroke: darken($shade-mid, 10%); 
			}
		}
		&:hover {
			cursor: pointer;
		}
		.svg-icon {
			position: absolute;
			width:  	100%;
			height: 	100%;
			z-index: 	0;
			fill: 		$grey-light; 
			stroke: 		darken($grey-light, 10%); 
			stroke-width: 			2; 
			@include 	makeButtonTransition(fill);
		}
		a {
			text-decoration: underline;
			display: inline-flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			padding-top: $gutter / 2;
			position: absolute;
			width:  100%;
			height: 100%;
			z-index: 0;
			
		}
		&.is-hidden {
			opacity: 0;
		}
		&.is-visible { 
			opacity: 1;
		}
		&.is-fixed, &.is-absolute {
			opacity: 1;
			bottom: $gutter / 2;
			&.is-visible { 
					opacity: 1;
			}	
		}
		&.is-fixed {
			margin-right: 0;
			position: fixed;
			left: 	auto;
			right: 	$gutter / 2;
		}
	}
	&.single-link {
		.bc-content-row {
			justify-content: flex-end;
		}
	}
	@media screen and (min-width: $desktop) {
		.bc-content-row {
			padding-top: $gutter;
		}
		& &-top {
			margin-right: 8%;
		}
	}
	@media screen and (min-width: $desktop) {
		height: #{(120px/16px)}rem;
	}
}


/** -- Back links at the bottom of inner pages -- **/
@import 'components/colour-schemes'; 
@import 'structure/footer'; 


//Enable flickity accessibility
/*.flickity-enabled:focus .flickity-viewport {
  outline: thin dotted;
  outline: 5px auto -webkit-focus-ring-color;
}*/


